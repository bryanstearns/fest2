require File.dirname(__FILE__) + '/../../spec_helper'

describe "The welcome page" do
  include ConferenceVsFestivalHelper
  before do
    force_festival_mode
    assigns[:upcoming_festivals] = []
    assigns[:past_festivals] = []
    assigns[:announcements] = []
    assigns[:announcement_limit] = 2
    assigns[:amazon_films] = []
    assigns[:amazon_limit] = 2    
  end
  
  describe "logged out and without festivals" do
    before do
      # template.should_receive(:logged_in?).and_return(false)        
      render 'welcome/index'
    end
  
    #it "should contain a login box" do
      #response.should have_tag("form[action=/account/login]")
    #end
    
    it "should list no festivals" do
      puts response.body
      response.should have_tag("p", /More .* coming soon/)
    end
  end
  
  describe "with festivals" do
    it "should list the festivals" do
      @upcoming_festivals = [ mock("festival", :name => "name", :location => nil, :dates => "x", :starts => "0" ) ]
      @past_festivals = []
      assigns[:upcoming_festivals] = @upcoming_festivals
      assigns[:past_festivals] = @past_festivals
      template.expect_render(:partial => 'festival', :collection => @upcoming_festivals)
      # template.should_receive(:logged_in?).and_return(false)

      render 'welcome/index'
      response.should have_tag("h3", /Click an upcoming festival:/)
    end
  end

  describe "with announcements" do
    it "should list the announcements" do
      @announcements = [ mock("announcement", :id => 1, :subject => "whoa", :contents => "zing", :published_at => Date.today, :published => true) ]
      assigns[:announcements] = @announcements
      assigns[:announcement_limit] = 2
      template.expect_render(:partial => 'announcements/announcement', :collection => @announcements,
                             :locals => { :announcement_limit => assigns[:announcement_limit] })
      # template.should_receive(:logged_in?).and_return(false)
      render 'welcome/index'
      response.should have_tag("ul.announcements")
    end
  end
  
  describe "with Amazon ads" do
    it "should show the ads" do
      assigns[:amazon_films] = [ mock("film", :amazon_asin => "abc") ]
      template.expect_render(:partial => 'films/amazon', :collection => assigns[:amazon_films],
                             :locals => { :amazon_limit => assigns[:amazon_limit] })
      render 'welcome/index'
      response.should have_tag("div.ad_section")
    end
  end
end

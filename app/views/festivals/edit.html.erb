<%# Edit an existing festival: /festivals/x/edit -%>
<% content_for :title do %>Edit <%= @festival.name %><% end %>
<% content_for :header do %>
  <% round_corners :context => self, :width => "100%" do |rc| %>
    Editing <%= h(@festival.name) %>
  <% end %>
<% end %>

<p>(See the editing hints at the bottom of the page...)</p>

<%= link_to 'Show', festival_path(@festival) %> |
<%= link_to 'Back', festivals_path %>

<%= error_messages_for :festival %>

<% form_for(@festival) do |f| %>
  <%= render :partial => "form", :locals => { :f => f } %>
  <p>
    <%= f.submit "Update" %>
  </p>
<% end %>

<% javascript_tag do %>

var dpm = [0,31,0,31,30,31,30,31,31,30,31,30,31];
function days_in_month(m, y) { // 1-based month!
  if (m != 2) return dpm[m];
  return (((y % 4 == 0) && (y % 100 != 0)) ? 29 : 28);
}

function screening_date_key(e) {
  var delta = 0;
  switch (e.keyCode) {
    case 107: <%# keypad-plus %>
      delta = 1;
      break;
    case 109: <%# keypad-minus %>
      delta = -1;
      break;
    default:
      // window.status = "not keypad +-: " + e.keyCode;
      return;
  }
  var day = parseInt(this.value);
  var month = parseInt($('screening_starts_2i').value);
  var year = parseInt($('screening_starts_1i').value);
  <%# window.status = "delta = " + delta + ", day = " + day + ", month = " + month + ", dim = " + days_in_month(month, year); %>
  if (day == 1 && delta == -1) { <%# Back a month %>
    if (month == 1) {
      year -= 1;
      month = 12;
    } else
      month -= 1;
    day = days_in_month(month, year);
  } else if (day >= days_in_month(month, year) && delta == 1) { <%# Next month %>
    if (month == 12) {
      year += 1;
      month = 1;
    } else
      month += 1;
    day = 1;
  } else { <%# just adjust within the month %>
    $('screening_starts_3i').value = day + delta;
    return;
  }
  <%# Change month & maybe year, & reset the day-of-month value %>
  $('screening_starts_3i').value = day;
  $('screening_starts_2i').value = month;
  $('screening_starts_1i').value = year;
}

// Autocompletion for country names
function autocomplete_country_for(textbox_id, menu_id) {
  return new Autocompleter.Local(textbox_id, menu_id,
    <%= Countries::NAMES.to_json %>,
    { 'fullSearch': true });
}
<% end %>

<h2>Films and Screenings</h2>

<%= link_to_remote "New Film",
    :url => new_festival_film_url(@festival),
    :method => "get",
    :html => { :id => "new_festival_film",
               :accesskey => "n" } %>

<div id="festival_film_form"></div>

<%= render :partial => "films/films_in_festival", 
    :locals => { :festival => @festival, :films => @festival.films } %>

<h2>Venues</h2>

<%= link_to_remote "New Venue",
    { :url => new_festival_venue_url(@festival),
      :method => "get" },
    { :id => "new_festival_venue" } %>
		
<div id="festival_venue_form"></div>

<%= render :partial => "venues/venues_in_festival", 
    :locals => { :festival => @festival, :venues => @festival.venues } %>
